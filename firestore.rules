
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // --- User Profiles ---
    // Anyone can create their own user profile (on signup).
    // Users can only update or delete their own profile.
    // Any authenticated user can read public profile data (for viewing profiles, leaderboards).
    match /users/{userId} {
      allow create: if isAuthenticated();
      allow read: if isAuthenticated();
      allow update, delete: if isAuthenticated() && request.auth.uid == userId;

      // Notifications are private to the user
      match /notifications/{notificationId} {
        allow read, write, delete: if isAuthenticated() && request.auth.uid == userId;
      }
    }

    // --- Plant Listings ---
    // Any authenticated user can create a listing.
    // Users can only update or delete their own listings.
    // Any user (even unauthenticated) can read plant listings.
    match /plants/{plantId} {
      allow create: if isAuthenticated();
      allow read: if true;
      allow update, delete: if isAuthenticated() && request.auth.uid == resource.data.ownerId;
    }

    // --- Orders ---
    // Orders are created via a backend process (Stripe webhook), not directly by clients.
    // Any authenticated user can read orders (for their own history and for the leaderboard).
    match /orders/{orderId} {
      allow create: if false; // Should be created by backend only
      allow read: if isAuthenticated();
      allow update, delete: if false; // Orders should be immutable once created
    }

    // --- Chats ---
    // Users can only read/write to chats they are a participant in.
    match /chats/{chatId} {
      allow read, write: if isAuthenticated() && request.auth.uid in resource.data.participants;
      
      match /messages/{messageId} {
        allow read, write: if isAuthenticated() && request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants;
      }
    }
    
    // --- Forums ---
    // Any authenticated user can create a forum.
    // Any user can read forums.
    // Only the creator can update or delete their forum.
    match /forums/{forumId} {
      allow create: if isAuthenticated();
      allow read: if true;
      allow update, delete: if isAuthenticated() && request.auth.uid == resource.data.creatorId;

      // Posts
      match /posts/{postId} {
        allow create: if isAuthenticated();
        allow read: if true;
        allow update, delete: if isAuthenticated() && request.auth.uid == resource.data.authorId;

        // Comments
        match /comments/{commentId} {
           allow create: if isAuthenticated();
           allow read: if true;
           allow update, delete: if isAuthenticated() && request.auth.uid == resource.data.authorId;
        }
      }
    }
    
    // --- Rewards ---
    // These documents are only created by the backend after certain actions.
    match /rewardsTransactions/{transactionId} {
        allow create: if false; // Backend only
        allow read: if isAuthenticated() && request.auth.uid == resource.data.userId;
        allow update, delete: if false;
    }
  }
}
